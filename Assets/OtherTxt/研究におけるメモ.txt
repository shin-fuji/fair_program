Unity使用中にハマったこと
○コンポーネントに既存のスクリプトを適用できない
・ほかのスクリプトの変更が適用されていない。VisualStudioにて変更を保存する
・スクリプトファイルの名前と中身のクラスの名前が一致していない(コピペすると起こりやすい)

○取得した角度の大きさが変
関数に入れる変数がそもそも間違っていないか？

○取得した角度が適用されない（歩く・投げる判定の失敗）

○アニメーターの体（の一部）の角度がおかしい
（ConnectToNeuronRobot.csにて、コピーすべきボーンを追加する）

○NullReferenceException: SerializedObject of SerializedProperty has been Disposed.
「NullReferenceException」どのオブジェクトにも参照を持たない参照変数にアクセスしようとするとおこるエラー

○BlenderをUnityに取り込むとき、テクスチャが引き継がれない
Blender上で設定するマテリアル名や設定の色合い(Diffuse Color)以外の補足情報である、Diffuse Colorの強度、
スペキュラー、放射(Emit)などは、設定しても Unityには引き継がれない(FBX形式に変換した時点でこれらの情報は失われる)
マテリアルのShaderからMobile/Diffuseを選択、「Select」をクリックし、インポートしておいた画像を選択する

○world角度とlocal角度
ワールドというのは画面全体に対する位置や角度、サイズであり、ローカルというのはHierarchyで確認することの出来る
オブジェクト同士の親子関係に起因する位置や角度、サイズ

○unityにneuronデータをインポートするとエラーが出る
アニメーションファイルが「fbx ascii」形式でないとダメらしい

○エラー「rc.right == m_GfxWindow->GetWidth() && rc.bottom == m_GfxWindow->GetHeight()」
変にdirectional lightを設定すると生じる。Window->Lighting->Sceneで、「Environment Lighting」をセットすると消えた。
(時間がたつと再発？、今は治まっている)
(1/10追記)ゲーム自体には特に影響なし。放っておけば消える。

○衝突するとすり抜ける、倒れる
スーパーマーケットに「Mesh Collider」、ニューロンロボットに「Capsule Collider」を適用
倒れないようにするためには、「Capsule Collider」Constraintsの回転XとZを拘束させる

○ログ「There are 2 audio listeners in the scene. Please ... one audio listener in the scene.」
カメラオブジェクトにあるAudio Listenerコンポーネントがシーン内に２つ以上あるのが原因。シーンにカメラを追加するとよく出現する。
シーン内でこのコンポーネントを１つになるように削除

○ビルド時に出る「The type or namespace name `UnityEditor' could not be found. Are you ... reference?」
using UnityEditor;の前に「#if UNITY_EDITOR」を挿入し、そのファイルの最後に「#endif」で囲む

○インスタンス参照でメンバ '△△△(関数)'にアクセスできません。代わりに型名を使用してください。
C#ではインスタンスを通してstaticメソッドを呼べない。関数側のstaticを消しておく

○コライダーの編集ができなくなる
「reorder my components」をインポートすると不具合が生じる

○rotationに角度を代入しても反映されない

○Mac本体boot内のWindows10でスクリーンショットを撮る
「Snipping Tool」を使用して画面をキャプチャする

○Mac本体boot内のWindows10で動画を撮る
「ScreenToGif」を使用して画面をキャプチャ、動画を取る

○UnityとPerceptionNeuronが接続できない
http://qiita.com/aimino/items/a80785ec655ab5d129a4を参照

○下の15の動作をunityに流し込むとき、進行方向がずれる
再生ボタンを押してから、Playerの「Y-Rotation」に30を代入する
※とりあえず別PCからデータを直接流し込む方針で。アニメーターにより動かす方法は保留(挫折...)

○transform.Translate(transform.forward * Speed * Time.deltaTime) だと、foward 方向とは逆向きに進んでしまう
transform.Translate( ... , Space.World)とすればよい(Translate はデフォルトがローカル座標系らしく、方向がずれることがある)

○八画面内で動かそうとすると「AXIS NEURON」との通信がうまくいかない
・「AXIS NEURON」の「Settings → Broadcasting → BVH → Enable」にチェックが入っているか確認
・USBにコピーするときに、実行ファイルとデータファイルをきちんとコピーしているか。
・USBを取り出すときに、きちんと「USBを取り出す」という手順を踏んでいるか
・ニューロンにつないであるバッテリーが切れていないか

○エラー「"SetDestination" can only be called on an active agent that has been placed on a NavMesh.」
タイミングの微妙なずれで、ナビメッシュ上にオブジェクトがないときや、準備が整う前にResume, SetDestination などしようとすると
発生する。ナビメッシュ上にオブジェクトが存在し、経路探索可能な状態かどうか調べるには、
if(navMeshAgent.pathStatus != NavMeshPathStatus.PathInvalid) {
//navMeshAgentの操作
}
とすると良い


疑問点
○Debug.Log(go.name)とは？

○TransformのPos、何を基準にしている？Posは変化しないのにRotが変化するのはなぜ？


その他の注意点
○ボーンの位置を取得するときは、スクリプトを別々に書いて別々のコンポーネントに適用させなければならない
Find系統の関数を使えばまとめられそう(面倒なので直していない)。


○unityでのAnimetorControllerの作成方法
fbx asciiをインポートした後、AnimetorControllerをcreateする。次に、Controller内でstateを生成し、アバターを紐づける。
最後に、Animetorのinspector内のRigにおいて、AnimationTypeをhumanoidにする

○八画面内で動かすとき
先にこのパソコンで実行ファイルを作り、そのファイルと「Data File」(unity_FairTestとunity_FairTest_Data)をUSBにコピー
して八画面パソコンに持っていく

○卒論実験動画
「ビデオ」に保存

○研究室前談話室のパスワード
15214




これからすべきこと
済：「ファサード」について調べる（役割を担った人物が演じるドラマみたいなもの）→出てこなかった……
モーションキャプチャから動作を抽出するといった先行研究を、自分の到達点を考えながら広く浅くサーベイする
済：「amss」について調べる（動作ログから、あらかじめ用意されたテンプレートと似たような動作を発見する）
済：大垣さんの論文を読む
済：amss→かんださん、いずくらさん、よしのさんの

今は手作業で動作判定を行っているが、将来的にはamssを使うことになりそう
unity上で動かしているデータはfbx形式だが、これはバイナリ形式であるため見にくい。そのため、別で解析用にbvh形式のデータを取っておく必要がある
※bvh形式：各体のパーツの座標データをtxt形式で保存したもの

実空間の動作（足踏みなど）と仮想空間の動作（歩くなどのコマンド的な動作）はいったん分けて考える。
実験中の動き：手作業で判断基準を設定


済：amssモジュールはネットに落ちてある？調べてみる。矢野システムは使わないほうが良い
→見つからない！先輩方or神戸大の教授に連絡してモジュールをもらうなどしたほうが良い？または自分で作る？
店内の複数人でシナリオ(○○を買う客、うろうろする客、レジ担当の店員、品出し店員など)を設定して、実際に店内で動かす
→必要な動作一覧
<<<客>>>
　１、歩く(07_01 walk、Subject #69 (walking))
　２、立ち止まる
　３、横を向く、上を見上げる
　４、周りを見渡す
　５、方向転換(Subject #16)
　６、しゃがむ
　７、手を前に伸ばす、斜め下に伸ばす(13_10 jump up to grab, reach for, tiptoe, ///)
　８、伸ばした手を目の前に持ってくる
　９、持ってきた手を前にかざす(商品を棚に戻す)
　１０、持ってきた手を下におろす
<<<店員>>>
店員は動かさない(妥協...)
カーネギーメロン大学のフリーbvhファイルをダウンロードし、それらをつなぎ合わせて動かしてみる
通路、十字路、レジなど場所の判定は「Box Collider」の「Is Trigger」を使えばよい？

済：店のスケールをもう少し広くする
済：axis neuron において、複数人のデータを同時に動かすことができるかを試してみる。→できなさそう

AMSS法によって、ある動作と類似度が高いフレームが得られる
→その動作とフレームにおける場所を調べ、関連付ける
→エージェント生成時に、その場所に来るとその動作をする確率を上げる
AMSS法をどのようにデータに適用させるか
→別でVisual Studioプログラムを作成して、そこでbvhファイルを適用(こちらで)
　or Unity内でボーンのデータを取っておき、そこで計算しておく


作るべき動作
１、野菜を買う1(左下棚)→レジへ
２、野菜を買う2(左上下棚)→レジへ
３、野菜を買う3(左上下棚、真ん中通路から)→レジへ
４、総菜を買う1
５、総菜・魚を買う
６、野菜・魚を買う
７、飲み物を買う
８、総菜・飲み物を買う
９、非食品を買う1(左棚)
１０、非食品を買う2(右棚)
１１、非食品を買う3(真ん中通路)
１２、非食品→魚を買う
１３、非食品→野菜を買う(真ん中通路)
１４、非食品(左棚)→総菜を買う
１５、非食品(真ん中通路からの真ん中右折)→総菜を買う

パラメータ
１、行動意志：上の動作と関連付ける。目的の場所へと移動させるパラメータ
２、静的環境：場所によって、直進・右折・左折を決めるパラメータ
３、動的環境：人・物が近づけばよけるパラメータ

（ぶらぶらする、立ち止まって商品を吟味するなどはとりあえず後回し）

目標：最初は自分の周りだけで群行動、最終的にはすべてのエージェントが自分の周りを見て群行動を起こす。

動的環境
・各エリアにコライダーを用意
・それぞれに売り場タグをつける
・ある人物が売り場に入ったとき、同じ売り場の人物(同じ売り場タグを持つ人物)を調べ、取得
・ほかの人物がどんな動作をしているか(どの動作変数を持つか)を調べる
　この時、領域に入った瞬間からの動作変数の列を考える。この列が
・流れ：まず全体のゴールを決める(○○を買うetc)→そのゴールに従って動かす→その動作が結果的に「大きな(or小さな)行動意図」になる
　途中の動作はヘードを用いてリーズナブルな行動を生成
・2度以上ヘードが起こる具体的な事例を考える
　例)商品棚の前に人が多数　→　前の人が立ち止まって商品棚を見ると、ほかの客も自動で同じ行動をとる
　　 通路に人が多数　　　　→　前の人が方向転換すると、ほかの客も自動で方向転換

注意
・アニメーションを遷移させ終わった後、doBehaviorは 0 に戻すこと

15の動作アニメーションを使ってみて...
１、比較的良い
２、レジを通っていない...
３、レジを通っていない...
４、ルートが少しずれる
５、


考えるべき雰囲気
１、普通の買い物：歩く、商品を手に取る、右左折
２、バーゲンセール：走る、立ち止まってあたりを見回す、歩きながらあたりを見回す
３、試食：人と話す、
４、じっくりと商品を吟味する：ゆっくり歩く


行動記号列は
「3334444332222333DL
  3333334455544333333332222222333UDR
  22222233...
」
のような形式にしたい

DL,UDRとかだと読み取る際に認識が難しい→DL,UDRはアルファベットに置き換えたほうがよさそう



/// 11/30やること
アニメーション切り替えの不具合修正
ファイルの読み書きを実装
RobotBehaviourScriptにファイル読み取り機能を追加したほうが良い？

/// 12/28
「集団の属性」に特徴的な動作群を考える
省略：店の客の行動記号列を記録・出力するシステムの実装
「お祭り」の舞台を作成
 - 屋台セット：https://bowlroll.net/file/54919


/// 1/2
済：「客が現在どこにいるかなどを示す定数」に「Front1, 2, 3」を追加
済：客の動きを考え、実際にモデルを動かしてみる
済：プレゼン資料を書き換える

/// 1/4
八面画面を使って実際に動かしてみる

/// 1/6
済：otherCustomer[] に WalkerEnd が入る原因を探る
済：客がエリアに入ったときに、自身のタグを変更するように直す

/// 1/8
不必要：松田さんに実験早めに４人回せないかメール
済：瀧本さんにニューロンの件メール
八画面内で、「実際に動く→行動記号列通りに動かす」を順繰りに動かしてみる。その際に所要時間を測る
済：第一段階の実験後アンケートの項目を考える

/// 1/10(火)
済：スタート画面から連続してゲームスタート
済：八画面で動かしたときの進行方向とNavAgentのブレについて調べる
済：記号列を読み込んで動くNPC(空のファイルを読み込んでもエラーが出ないようにする)
八画面内で、「実際に動く→NPCを行動記号列通りに動かしつつ順繰りモデル生成」。その際に所要時間を測る
済：neuronメールを返す
先生にアンケート項目が妥当かを聞く(他：購買意欲低のモデルは作るべきか、順繰り操作は購買行動の高低で分けるor混ぜて行うべきか)
済：マニュアル(画像含む)を印刷しておく
済：thinkingアニメーション付け替え
済：実験の2時間、シミュレーションシートを書いておく

/// 1/11(水)
ドームで実際に動かし、順繰り操作でモデル3種類を生成する。(時間を必ず測ること)
モデルを実際に混ぜて、どの程度herd behaviorが見られるかを確認し、パラメータを調整。
<第一段階で調整必要と思われるパラメータ>
WalkerCreator：timer >= 5, walkerNum(歩行者は何人が適当か？→10-12程)
NavMeshofCustomer_FairVer：randNum < 0.5f(ただの歩行者か、店の前をうろうろするか→もう少し歩行者を増やす)
<第二段階で調整必要と思われるパラメータ>
RobotBehaviourScript_FairVer：TimeInterval, randNum > 1 - (otherCustomerList.Count / 5)→定数に

/// 1/12(木)
済：コンフィグボタンを作り、Addressを外から入力できるようにする
済：昨日のすべて
済：アンケート項目を考えなおす・アンケート１を作る
行動バリエーションを増やす
・あたりを見回す


/// 1/13(金)
昨日の残り
済：昨日のメモの内容を実行
済：デモバージョンをプレイできるようにするor行動記号列を保存せずにゲーム終了ボタンを作る
済：ゲーム画面にタイムを表示(表示は没)・4分で終了するように実装
済：「行動記号列ファイルを読む・読まない」もコンフィグから変更できるように実装

/// 1/16(月)
延期：卒論タイトルを提出

/// 1/17(火)
済：西田先生に資料を送る
済：大本先生に、アンケートについて相談する
済：動作アニメーション「LookAround」を適用させる
卒論、大まかな目次を作る

/// 1/19(木)
済：卒論目次

済：行動記号列を、実験2のために体裁を整える
動画を作ってみる
実験2のアンケートを作る

注：herdあり・なしそれぞれで、買い物への積極性高・中・低を２種類ずつ見せる
動画の一本当たりの長さは２分弱くらい？(積極性低の、道路の端から端までの１往復を基準、大体２分弱くらいか？)
→30分あれば終わりそう
動画ではcustomerのコライダーをもっと細くする（密集したときに固まってしまうため）
customerは、1エリア当たりherdを行う回数を1回にすること

実験2
事前手続きも全部談話室で行う
時間が足りない？アンケートの項目を削るor時間をこちらでしっかり区切る












